<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html xmlns:mso="urn:schemas-microsoft-com:office:office" xmlns:msdt="uuid:C2F41010-65B3-11d1-A29F-00AA00C14882">

<head>
    <title>Developing with the SharePoint Framework</title>
    <meta name="NumberOfDays" content="5" />
    <!--[if gte mso 9]><xml>
    <mso:CustomDocumentProperties>
    <mso:ContentTypeId msdt:dt="string">0x0101009C33340F38E14D1EABEAC83093A8F1720035FA71C7F94FBE42B4E96DD1659531EC</mso:ContentTypeId>
    </mso:CustomDocumentProperties>
    </xml><![endif]-->
    <!--[if gte mso 9]><xml>
    <mso:CustomDocumentProperties>
    </mso:CustomDocumentProperties>
    </xml><![endif]-->
    <!--[if gte mso 9]><xml>
    <mso:CustomDocumentProperties>
    </mso:CustomDocumentProperties>
    </xml><![endif]-->
</head>

<body>

    <h2>Learning Goals</h2>
    <p>
        SharePoint Framework, abbreviated as SPFx, offers us the tools to build custom solutions for the modern
        Microsoft
        365 experience, targeting SharePoint, Viva and Teams. In this deep-dive development course we will
        learn the way to efficiently work with Node.js, React and Typescript. Using this toolset we can build modern
        SharePoint web parts, Teams tabs, Viva Connections Cards and other extensions to Microsoft 365. We will see how
        to
        connect to various data sources like Microsoft Graph, Secured API, etc...
    </p>

    <h2>Target Audience</h2>
    <p>
        Participants ideally have some development experience. No TypeScript or JavaScript experience is required, but
        recommended. Knowing how to use SharePoint is advised.
    </p>

    <h2>Course Outline</h2>


    <h4>What is SharePoint Framework</h4>
    <p>In this introduction we will talk about the development options we have in SharePoint and Office 365. We will
        take a look at the
        tool chain of SharePoint Framework and how it fits into the modern SharePoint development story.</p>
    <ul>
        <li>SharePoint Framework overview</li>
        <li>SharePoint Framework tools</li>
        <li>Key SPFx features</li>
        <li>Road map</li>
    </ul>

    <h4>Preparing your machine for the SharePoint Framework</h4>
    <p>
        Learn the essentials of each tool used with SPFx.
    </p>
    <ul>
        <li>Visual Studio Code</li>
        <li>Introducing Node.js, Yeoman, Gulp and Webpack</li>
        <li>LAB - Preparing your Environment for SharePoint Framework</li>
    </ul>

    <h4>Building Client-Side Web Parts</h4>
    <p>
        The SharePoint Framework allows us to build modern client-side web parts that can be used in SharePoint and
        Teams.
        We will use the Yeoman generator to
        create a web part project. During this module, we will explore the project structure and make some basic changes
        to our first web part.
    </p>
    <ul>
        <li>Client-side Web Parts Fundamentals</li>
        <li>Web Part Project Structure</li>
        <li>Full Page Apps</li>
        <li>Creating Teams Tabs with SPFx</li>
        <li>LAB - Building a First Web Part</li>
    </ul>

    <h4>Strongly typed JavaScript with TypeScript</h4>
    <p>TypeScript is programming language used by default in all SPFx generated projects.
        In this module, we will talk about the TypeScript language and how it can help you in building your enterprise
        scale applications.</p>
    <ul>
        <li>What is Typescript?</li>
        <li>Typescript Transpilation and Configuration</li>
        <li>Language Features</li>
        <li>Namespaces and Modules</li>
        <li>LAB - Using TypeScript</li>
    </ul>

    <h4>Web Part Properties</h4>
    <p>Web parts should be easily configurable by the users. For this we need to define and expose properties to the UI.
        In this chapter you will learn how to customize properties and the property pane controls and how to build your
        own.</p>
    <ul>
        <li>The Property Pane</li>
        <li>Custom Property Controls</li>
        <li>Validation</li>
        <li>Property Pane Life Cycle</li>
    </ul>

    <h4>Loading SharePoint data in SPFx</h4>
    <p>When loading data from client-side code, we use REST.
        This module will teach you how to use the Framework HTTP clients to consume these services.</p>
    <ul>
        <li>The REST Endpoints</li>
        <li>Using the SPClient to Get Data</li>
        <li>PnPjs</li>
        <li>SharePoint List Subscriptions (webhooks)</li>
        <li>LAB - Customize Web Part Properties and Load SharePoint Data</li>
    </ul>

    <h4>Loading other frameworks</h4>
    <p>
        You will learn how to integrate other packages into your SharePoint framework project,
        but also what the impact is on your JavaScript code bundles.
    </p>
    <ul>
        <li>npm Modules</li>
        <li>Loading JavaScript libraries</li>
        <li>Using CDNs for getting libraries</li>
        <li>Bundling and Externals</li>
        <li>LAB - Loading Frameworks and Libraries</li>
    </ul>


    <h4>Deployment Overview</h4>
    <p>SPFx solutions need to be deployed through a SharePoint app catalog. In this chapter we will learn what the
        advanced options are when deploying.
    </p>
    <ul>
        <li>The App Catalog</li>
        <li>Versioning</li>
        <li>Deploying SharePoint Assets & Extensions</li>
        <li>Tenant-wide, Site Collection or Site specific deployments</li>
        <li>Deploying to Microsoft Teams</li>
        <li>LAB - Deploying SPFx Projects</li>
    </ul>

    <h4>Using and building React components for the SharePoint Framework</h4>
    <p>During this module we will cover the basics of React and how it's component system works.
        It will guide you to use the framework to build SPFx webparts.
    </p>
    <ul>
        <li>React App Structure</li>
        <li>What is JSX?</li>
        <li>JavaScript Expressions</li>
        <li>JSX Tips and Tricks</li>
        <li>React Components</li>
    </ul>

    <h4>React Components Deep-Dive</h4>
    <p>To be able to reuse and split our application into logical parts, we need components. These components are what
        we'll use to create interactivity in the application. We will take a look at the concepts of state and
        properties to add this interactivity.
    </p>
    <ul>
        <li>Multiple Components</li>
        <li>Transferring Props</li>
        <li>Component State & Lifecycle</li>
        <li>Form Components</li>
        <li>React Virtual DOM</li>
        <li>LAB - SPFx and React</li>
    </ul>

    <h4>Brand your client web parts with SASS and Fluent UI</h4>
    <p>In this module you will learn how to make your SharePoint Framework projects look good. We will talk about SASS,
        which is a CSS pre-compiler and Fluent UI, the styling framework from Microsoft.
    </p>
    <ul>
        <li>Introducing SASS</li>
        <li>SASS Variables, Mixins, Nesting, functions, ...</li>
        <li>SASS Preprocessing</li>
        <li>Fluent UI styles</li>
        <li>Fluent UI Fabric components</li>
        <li>LAB - Using SASS in SPFx</li>
    </ul>

    <h4>Connecting to Microsoft Graph and Entra ID secured API's</h4>
    <p>Microsoft Graph is a unified API for getting data from the entire Microsoft 365 platform. We will see how to
        access the information from
        the Graph API and what is needed for giving your application the right to access the graph on your behalf.
        We will also see how to call and give access to API's secured with Entra ID.
    </p>
    <ul>
        <li>Register Custom Applications on Entra ID</li>
        <li>The Microsoft Graph API</li>
        <li>Consuming Microsoft Graph</li>
        <li>API Permissions in SharePoint</li>
        <li>Using Other Protected API's</li>
        <li>Domain Isolated Web Parts</li>
    </ul>

    <h4>SharePoint Framework Extensions</h4>
    <p>There are a bunch of other development possibilities within SPFx like Application customizers,
        Field customizers and other</p>

    <ul>
        <li>Creating an Application Customizer</li>
        <li>Creating a Field Customizer</li>
        <li>Creating a Command Set</li>
        <li>Executing Scripts</li>
        <li>Build your own Form</li>
        <li>Build Adaptive Card Extensions</li>
    </ul>


    <h4>Using the Graph Toolkit with SPFX</h4>
    <p>The Graph toolkit contains a set of web components which makes it easier to make solutions targetting the Graph
        API.
        We will have a look at the components offered and how we can use them in SPFX
    </p>
    <ul>
        <li>Graph Toolkit</li>
        <li>React Components</li>
        <li>Building Teams Tab</li>
        <li>Customizing Graph Toolkit Components</li>
        <li>Authentication Providers</li>
    </ul>

    <h4>Dynamic Data</h4>
    <p>Dynamic Data allows you to connect different SPFX components and share data between them</p>
    <ul>
        <li>Writing a Data Provider and Data Consumer</li>
        <li>Data Serialization</li>
        <li>Handling Data Updates</li>
    </ul>

    <h4>Tips and Tricks</h4>
    <p>Now that we know all about SharePoint Framework development, it's time to look at some things that will make your
        life easier while developing!</p>
    <ul>
        <li>Debugging</li>
        <li>Application Insights</li>
        <li>Custom Gulp Tasks</li>
        <li>Bundles in WebPack</li>
    </ul>

</body>

</html>