<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html xmlns:mso="urn:schemas-microsoft-com:office:office" xmlns:msdt="uuid:C2F41010-65B3-11d1-A29F-00AA00C14882">
<head>
    <title>Power Platform ALM and Governance Strategies</title>
    <meta name="NumberOfDays" content="3" />
    <meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
<!--[if gte mso 9]><xml>
<mso:CustomDocumentProperties>
<mso:ContentTypeId msdt:dt="string">0x0101009C33340F38E14D1EABEAC83093A8F17200938BCC29E1CCB440A60EEDA7E6FABCFB</mso:ContentTypeId>
</mso:CustomDocumentProperties>
</xml><![endif]-->
</head>
<body>
    <h2>Learning Goals</h2>
    <p>
        ALM is the lifecycle management of applications, which includes governance, development, and maintenance. 
        In this course, you will learn how to use the Power Platform features and tools available to manage ALM. 
        By the end of the course, participants will be equipped with a comprehensive skill set for 
        successful development, deployment, and operation of a Power Platform environment. </p>

    <h2>Target Audience</h2>
    <p>
        This course is targeted at Power Platform makers and administrators who are interested in managing and deploying 
        Power Apps and Flows in a corporate environment. Participants should have a basic understanding of Power Apps and Power Automate.
    </p>
    <h2>Course Outline</h2>

    <h4>Working with Environments in the Power Platform</h4>
    <p>
        This chapter introduces how environments can be used to separate your development, acceptance and production environment. 
        It also explains how you configure environment security so that only approved users can create and manage environments.
    </p>

    <ul>
        <li>Overview of the Power Platform</li>
        <li>The Role of Environments in the Power Platform</li>
        <li>Creating and Managing Environments</li>
        <li>Securing Environments with Data Loss Prevention Policies</li>
        <li>Managed Environments</li>
        <li>Git Integration</li>
        
        <li>LAB: Creating Environments</li>
    </ul>

    <h4>Working with Solutions in the Power Platform</h4>
    <p>
        Solutions are used by app makers and developers to package related customizations together so that they can be
        managed and deployed as a single unit. We will see what components can be added to a solution and how they are the essential building blocks of your
        environment.
    </p>
    <ul>
        <li>Working with Solutions in Environments</li>
        <li>Default Solutions in an Environment</li>
        <li>Creating Solutions and Solution Publishers</li>
        <li>Creating Canvas Apps and Power Automate Flows inside a Solution</li>
        <li>Importing and Exporting Solutions</li>
        <li>Managed versus Unmanaged Solutions</li>
        <li>Solutions and Managed Properties </li>
        <li>Versioning Solutions</li>
    </ul>

    <h4>Working with Connection References and Environment Variables</h4>
    <p>
        In this chapter you will learn about Connection References and Environment Variables and how they can be used to solve the issue of
        connecting to separate development/acceptance/production data sources without having to make major changes in a Power Automate Flow or Canvas App.
    </p>
    <ul>
        <li>Connection References in Power Automate</li>
        <li>Connection References in Canvas Apps</li>
        <li>Connection References in Solutions</li>
        <li>Environment Variables in Power Automate</li>
        <li>Environment Variables in Canvas Apps</li>
        <li>Environment Variables in Solutions</li>
        <li>Importing Solutions with Connection References and Environment variables</li>
        <li>LAB: Working with Connection References and Environment Variables</li>
    </ul>

    <h4>Application Lifecycle Management (ALM) with the Microsoft Power Platform CLI</h4>
    <p>
        When developing larger apps and flows it is important to separate your development, acceptance and production
        environments. In this chapter your will learn how to implement ALM in the Power Platform CLI.
        You will also see how to unpack Canvas Apps into their source code.
        From the source code you can reassemble your solutions and import them in your acceptance or production
        environments.
    </p>

    <ul>
        <li>The Microsoft Power Platform CLI</li>
        <li>Application Lifecycle Management with the Power Platform CLI</li>
        <li>Editing a Canvas App using Power FX and Visual Studio Code</li>
        <li>Managing Environment Variables and Connection References with the CLI</li>
        <li>LAB: Automate ALM with Power Platform CLI Scripts</li>
    </ul>

    <h4>Working with Service Principals in the Power Platform</h4>
    <p>
        You do not want your business critical apps and flows to be owned by personal Microsoft 365 account. 
        Likewise, when using the Power Platform CLI to create Deployment Pipelines, you do not want to run them with your Microsoft 365 account.
        In this chapter you will learn how create and use Service Principals to own and deploy Power Platform artifacts. 
    </p>
    <ul>
        <li>Which artifacts are actually user-owned?</li>
        <li>What are Service Principals?</li>
        <li>Creating and Configuring a Microsoft Entra ID Application Registration</li>
        <li>Using Service Principals in Canvas Apps and Power Automate Flows</li>
        <li>Working with Service Principals in the Power Platform CLI</li>
        <li>LAB: Configure and Use Service Principals for better ALM Practices</li>
    </ul>

    <h4>Working with Deployment Pipelines in the Power Platform</h4>
    <p>
        Pipelines in the Power Platform aim to democratize application lifecycle management (ALM) for Power Platform and Dynamics 365 customers.
        They bring ALM automation into the service in a manner that's more approachable for all makers, admins, and developers.
    </p>
    <ul>
        <li>Configuring Deployment Pipelines</li>
        <li>Exporting Solutions with Deployment Pipelines</li>
        <li>Extending Deployment Pipelines with Approvals</li>
        <li>Extending Deployment Pipelines with Service Principals</li>
        <li>Deploying Solutions with Personal Deployment Pipelines</li>
        <li>LAB: Configuring Pipelines with Service Principals</li>
    </ul>

    <h4>Working with On-Premises Data Sources</h4>
    <p>
        Companies don't always store all their data in the cloud. If you want to build Canvas Apps or Power Automate Flows that access on-premises data sources, you'll need to install and configure a Data Gateway.</p>
    <ul>
        <li>Online vs. On-Premises Data Sources</li>
        <li>Installing and Configuring a Data Gateways</li>
        <li>Using a Data Gateways in Canvas Apps and Power Automate</li>
        <li>LAB: Accessing On-Premises Data Sources using a Data Gateway</li>
    </ul>

    <h4>Working with the Center of Excellence Toolkit</h4>
    <p>
        The Microsoft Power Platform CoE Starter Kit is a collection of components and tools that are designed to help you get started with developing a strategy for adopting and supporting the Microsoft Power Platform.
        In this chapter you will learn how to install and configure the Center of Excellence Toolkit and how it can be used to
        make sure your organization is following all best practices for the Power Platform.  
    </p>
    <ul>
        <li>Center of Excellence Component Overview</li>
        <li>Configuring the Center of Excellence Starter Kit</li>
        <li>Using the Center of Excellence Components</li>
    </ul>
</body>
</html>