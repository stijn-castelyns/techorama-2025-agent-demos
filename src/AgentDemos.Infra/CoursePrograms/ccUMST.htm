<html xmlns:mso="urn:schemas-microsoft-com:office:office" xmlns:msdt="uuid:C2F41010-65B3-11d1-A29F-00AA00C14882">
<head>
    <title>Microsoft Web & Windows Development - Technology Overview</title>
    <meta name="NumberOfDays" content="2" />
    <!--[if gte mso 9]><xml>
  <mso:CustomDocumentProperties>
  <mso:ContentTypeId msdt:dt="string">0x0101009C33340F38E14D1EABEAC83093A8F1720088401033E3C16F45940F715CE902A5E7</mso:ContentTypeId>
  </mso:CustomDocumentProperties>
  </xml><![endif]-->
</head>
<body>
    <h2>Learning Goals
    </h2>
    <p>
        Microsoft offers an exciting set of software technologies for developing enterprise and consumer applications targeting different types of devices. A broad range of technologies as .NET, Microsoft Azure, 
      Visual Studio and Microsoft 365 and Power Platform will help developers to build effective and high quality applications on the Microsoft platform.
    In this 2-day seminar, Microsoft Web and Windows development technologies will be positioned as
    the platform for organizations on which its applications can be developed and
    run.
    </p>
    <h2>Target Audience
    </h2>
    <p>
        This seminar is intended for executive IT managers,
    technical sales persons, project leaders and other IT professionals who are directly or indirectly involved with Microsoft development technologies.
    As our seminar will not be about coding techniques, the only prerequisite we have
    defined is that you come with an open mind.
    </p>
    <h2>Course Outline
    </h2>
    <h3>Day 1: General .NET technologies</h3>
    <h4>Microsoft .NET, what is it all about?
    </h4>
    <p>.NET is a popular development platform, supporting multiple programming languages. Since the release of .NET Core the framework became cross-platform, supporting now macOS and Linux, and with a lower footprint necessary for IoT scenarios.</p>
    <ul>
        <li>Developed and running applications with the .NET</li>
        <li>Overview of the Microsoft developer tools: What is Visual Studio, C# and Azure DevOps?</li>
        <li>Common Language Runtime functionalities</li>
        <li>.NET on desktop, servers, mobile and IoT devices.</li>
        <li>.NET Framework vs .NET Core</li>
    </ul>
    <h4>Application Architectures in .NET
    </h4>
    <p>
        Microsoft .NET is a rich development model supporting different types of application with different architectures. This module will introduce the different libraries in .NET allowing you to build
         web, Windows, mobile, service-oriented, database-driven... applications.
    </p>
    <ul>
        <li>.NET application architectures in common business scenarios </li>
        <li>ASP.NET and web-oriented architectures </li>
        <li>Mobile Development Technologies with Xamarin.</li>
    </ul>
    <h4>Building  
      desktop Applications </h4>
    <p>Windows Presentation Foundation (WPF) and .NET MAUI provides developers with a  programming model for building desktop applications on Windows.</p>
    <ul>
        <li>Benefits of building Windows client applications</li>
        <li>WPF Fundamentals</li>
        <li>Cross platform .NET development with .NET MAUI</li>
    </ul>
    <h4>Working with Enterprise Data in .NET
    </h4>
    <p>Entity Framework (EF) Core is an object-relational mapper that enables .NET developers to work with relational data. It eliminates the need for most of the data-access code that developers usually need to write.</p>
    <ul>
        <li>Managing enterprise data with SQL Server or SQL Azure</li>

        <li>Accessing data with Entity Framework</li>

    </ul>
    <h4>Application Lifecycle Management with Azure DevOps</h4>
    <p>Visual Studio Team Services allows you to plan, build, and ship software across a variety of platforms. If offers development teams key features like Version Control, Continuous Integration, Release Manamgement and Reporting.</p>
    <ul>
        <li>The Azure DevOps Ecosystem </li>
        <li>The role of&nbsp; Azure DevOps</li>
        <li>Work Item Tracking, Build Automation and Version Control with Git</li>
        <li>Continuous Integration</li>
        <li>Project Management and Reporting</li>
        <li>Agile and SCRUM Software Development</li>
        <li>Branching and Merging</li>
    </ul>

    <h3>Day 2: Web Technologies</h3>

    <h4>High-level overview of the Web</h4>
    <p>
        In this module you will get familiar with the the fundamentals of web development. You will learn about the different technologies used in server side and front-end development.
    </p>
    <ul>
        <li>HTTP and HTML overview: HTTP, HTML, CSS, JavaScript explained</li>
        <li>Static vs. dynamic web sites</li>
        <li>Client and server side coding</li>
        <li>Responsive web design: building cross-platform applications on the web</li>
    </ul>

    <h4>Microsoft Server side technologie: ASP.NET
    </h4>
    <p>ASP.NET is a web framework part of .NET for building modern web apps and services with .NET.</p>
    <ul>
        <li>Using ASP.NET as your web application technology</li>
        <li>Comparing ASP.NET MVC vs Blazor</li>
        <li>Full stack web development</li>
        <li>Developing Mobile and Responsive web applications</li>
    </ul>

    <h4>Front-end web technologies</h4>
    <p>Front-end web development, also known as client-side development is the task of creating the user-facing side of the website, what each user will see. The technologies used are independent from the server-side technologies. </p>
    <ul>
        <li>Benefits of using front-end technologies</li>
        <li>Most common JavaScript libraries: Vue.js, React and Angular.</li>
    </ul>

    <h4>Building an API with ASP.NET Web API
    </h4>
    <p>In a lously couple architecture, services will connect the different tiers of your application. ASP.NET Web API is designed to build REST APIs.</p>
    <ul>
        <li>Introducing RESTful services.</li>
        <li>Evolution of Web Services technologies in .NET: .ASMX, WSE, WCF, Web API</li>
        <li>Building REST Services with ASP.NET Web API.</li>
    </ul>

    <h4>Microsoft Azure Overview for Developers</h4>
    <p>Microsoft Azure is Microsoft's cloud platform offering a collection of integrated cloud services providing SaaS, PaaS and IaaS services and supporting many different programming languages, tools and frameworks.</p>
    <ul>
        <li>Overview of Microsoft Azure</li>
        <li>Usage Scenarios</li>
        <li>Software as a Service (SaaS)</li>
        <li>Platform as a Service (PaaS)</li>
        <li>Infrastructure as a Service (IaaS)</li>
        <li>Azure core components: Azure Web Apps, Virtual Machines and SQL Azure</li>
    </ul>
    <h4>Microsoft Entra ID</h4>
    <p>Microsoft Entra ID is a cloud-based Identity and Access Management service offering authentication and authorization for your cloud and mobile applications.</p>
    <ul>
        <li>Identity Management in the Cloud</li>
        <li>User and Group Management</li>
        <li>Directory Synchronization</li>
        <li>Single Sign-On and Federation</li>
        <li>Multi-Factor Authentication</li>
    </ul>
    <h4>Microsoft 365</h4>
    <p>Microsoft 365 is a subscription based cloud product of Microsoft that includes access to Windows 11 and many Microsoft 365 applications like Exchange Online, SharePoint Online and Microsoft Teams.</p>
    <ul>
        <li>Key Office 365 Features: Exchange Online, Microsoft Teams and SharePoint Online</li>
        <li>Office 365 Subscription plans</li>
        <li>SharePoint Online Overview</li>
        <li>Microsoft 365 SDKs</li>
        <li>Microsoft Power Apps and Power Automate</li>
    </ul>
</body>
</html>
