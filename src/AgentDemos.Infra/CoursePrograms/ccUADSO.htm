<!-- saved from url=(0034)https://www.u2u.be/html/ccuads.htm -->
<html xmlns:mso="urn:schemas-microsoft-com:office:office" xmlns:msdt="uuid:C2F41010-65B3-11d1-A29F-00AA00C14882">

<head>
    <meta http-equiv="Content-Type" content="text/html; charset=windows-1252">
    <title>Data Science with Python on Azure AI</title>
    <meta name="NumberOfDays" content="3">

    <!--[if gte mso 9]><xml>
<mso:CustomDocumentProperties>
<mso:ContentTypeId msdt:dt="string">0x0101009C33340F38E14D1EABEAC83093A8F1720026EC9B8D561B9E4FB2429BA5E01CB4D7</mso:ContentTypeId>
</mso:CustomDocumentProperties>
</xml><![endif]-->

    <meta id="ConnectiveDocSignExtentionInstalled" name="ConnectiveDocSignExtentionInstalled"
        data-extension-version="1.0.6">
</head>

<body>
    <h2>Learning Goals</h2>

    <p>

        In this course, we first explain the fundamental concepts of AI. From there, we explore the power of pre-trained models. As we progress, 
        the focus transitions from using existing models to the creation of new machine learning models from the ground up using Python. Following this, 
        the course introduces Azure Machine Learning, from scaling up model training, deploying models to monitoring the deployed models.
    </p>

    <h2>Target Audience</h2>

    <p>This course focusses on data scientists who are considering the Azure stack for applying AI and
        machine learning on their data.

        Participants must have a working knowledge of the Python programming language. If needed, attend our
        <a href="/cc/upde" target="_blank">Python for data engineering training</a> first.
    </p>



    <h2>Course Outline</h2>

    <h4>Machine Learning Introduction</h4>
    <p>Before ML can be applied, the key concepts of machine learning need to be discussed.</p>
    <ul>
        <li>Why use Machine Learning?</li>
        <li>Supervised versus Unsupervised Learning</li>
        <li>Machine Learning Methodology CRISP-DM</li>
        <li>Data Preparation</li>
        <li>Training, Validation and Test sets</li>
        <li>Classification, Regression and Clustering</li>
        <li>AI in the Microsoft Stack</li>
        <li>Compare Azure ML services with Microsoft Synapse Fabric</li>
    </ul>

    <h4>Azure AI Services</h4>
    <p>Pre-trained models are an easy way to get started building intelligent applications. These models are pre-trained
        for generic tasks
        such as image or voice recognition, text analysis and much more.
        Some models can be further fine-tuned to meet specific needs (transfer learning).
        This module presents the different Azure AI
        services (formerly called Azure Cognitive Services) in Azure, split up in domains such as vision, speech,
        decision,
        etc. Via the Azure AI Studio, the models can be explored and fine-tuned. The Azure AI Studio also provides a
        first Python code snippet to continue the exploration in Python.

    </p>
    <ul>
        <li>Using Azure AI Studio</li>
        <li>OpenAI versus Azure OpenAI Service</li>
        <li>Azure AI Speech</li>
        <li>Azure AI Language</li>
        <li>Azure AI Vision</li>
        <li>Customizing Azure AI Services</li>
        <li>LAB: Setup and Use Azure AI Services</li>
    </ul>


    <h4>Azure OpenAI Service</h4>
    <p>
        Large Language models (LLMs) such as Chat-GPT have proven to be useful in a wide variety of scenarios. By
        providing predefined prompts,
        you can configure these models to help you implement chat bots, answer questions for staff and customers,
        summarize documents etc.
        Microsoft offers this service as Azure OpenAI Service, integrating it with the Azure platform.
    </p>
    <ul>
        <li>Introducing Azure OpenAI Services</li>
        <li>Using the Tokenizer</li>
        <li>Choosing the right Deployment</li>
        <li>Test deployment in the Azure AI Studio Playground</li>
        <li>Completion versus Chat</li>
        <li>Deploying models as a web app</li>
        <li>Creating, storing and using Embeddings</li>

    </ul>

    <h4>Using Azure AI Services in Python</h4>
    <p>This module shows how the Azure AI services can be used from within Python code, or using a command line
        interface (CLI).</p>
    <ul>
        <li>Azure AI services API</li>
        <li>Using Azure AI Services and Azure OpenAI Services from SynapseML</li>
        <li>Using Azure AI Services CLI</li>
        <li>Calling Azure AI Services from Python</li>
        <li>LAB: Programming on top of Azure AI Services</li>
    </ul>

    <h4>Build your own Machine Learning Model with scikit-learn</h4>
    <p>Many business problems can be tackled by basic machine learning techniques. In this module the most common
        machine learning approaches such as linear regression and random forests are used with Python. We also pay
        attention to model
        inspection.</p>
    <ul>
        <li>Configuring your Environment</li>
        <li>Machine Learning in Azure Machine Learning and Microsoft Fabric</li>
        <li>Using Microsoft Synapse Fabric for ML</li>
        <li>Normalization, Standardization, One-Hot Encoding</li>
        <li>Classification</li>
        <li>Decision Trees, Logistic Regression and Support Vector Machines</li>
        <li>Model tuning: Working with Hyper-Parameters</li>
        <li>Regression Models</li>
        <li>Linear Regression and Neural networks</li>
        <li>Unsupervised learning: Clustering</li>
        <li>LAB: Classification and Regression with scikit-learn</li>

    </ul>

    <h4>Azure Machine Learning</h4>
    <p>Machine learning on a local machine and a small dataset is one thing, running this on larger datasets or
        more CPU-hungry techniques (or even GPUs) can become a challenge. Another problem is deploying your model: How
        can we
        easily call the resulting model from within other applications? Azure Machine Learning helps
        answering these questions.</p>
    <ul>
        <li>Azure Machine Learning overview</li>
        <li>Create an Azure Machine Learning Workspace</li>
        <li>Setting up Compute and Datastores</li>
        <li>Creating and Querying Jobs and Experiments</li>
        <li>Deploying and Using Models</li>
        <li>Creating and Registering Images</li>
        <li>Deploy Images as Web Services</li>
        <li>LAB: Building ML Models in Azure Machine Learning</li>
    </ul>

    <h4>Automated Machine Learning</h4>
    <p>
        Part of the machine learning process can be automated. Azure Automated machine learning provides a web portal
        and a Python API
        to automate data preprocessing and model training.
    </p>
    <ul>
        <li>Building and Deploying Automated ML models</li>
        <li>Calling Automated ML from Python</li>
        <li>LAB: Working with Automated ML</li>
    </ul>

    <h4>Azure Machine Learning Pipelines</h4>
    <p>
        Machine learning pipelines allow you to build parameterized, reusable pipelines with data cleansing, model
        training and evaluation steps.
        These can be made from Python code or with a graphical designer in the Azure Machine Learning portal.
    </p>
    <ul>
        <li>Azure Machine Learning pipelines</li>
        <li>Using the Azure Machine Learning Designer</li>
        <li>Creating pipelines in Python</li>
        <li>Executing Azure Machine Learning pipelines</li>
        <li>LAB: Building and executing Azure Machine Learning pipelines</li>
    </ul>

    <h4>Getting started with Deep Learning</h4>
    <p>From all the machine learning techniques there is one that gets popular for more challenging problems:
        Multiple layers of neural networks, better known as deep learning. For problems such as image recognition,
        speech understanding etc. this is currently the way to go. But it's from a mathematical point of view a
        very challenging technique. In this module the basics of deep learning are introduced.</p>
    <ul>
        <li>From Neural networks to Deep learning</li>
        <li>Overview of Deep Learning Frameworks</li>
        <li>Getting started with the Keras Framework</li>
    </ul>


</body>

</html>