<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns:mso="urn:schemas-microsoft-com:office:office" xmlns:msdt="uuid:C2F41010-65B3-11d1-A29F-00AA00C14882">
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <title>Microsoft Azure Infrastructure Architecture</title>
    <meta name="NumberOfDays" content="4" />

    <!--[if gte mso 9]><xml>
<mso:CustomDocumentProperties>
<mso:ContentTypeId msdt:dt="string">0x0101009C33340F38E14D1EABEAC83093A8F1720051FDF797F7511A44897454FB8654BE2F</mso:ContentTypeId>
</mso:CustomDocumentProperties>
</xml><![endif]-->
</head>
<body>
    <h2>Learning Goals</h2>
    <p>
        Many companies host resources in the Azure cloud platform. But making design and architectural decisions is not always an easy task. 
        There are many roads that lead to a similar solution. So the key is to find the best option for the job in terms of cost, manageability, high availability, security, ...
        In this course we will investigate various Azure services, compare them and debate about the best service for a given project. 
        This course focuses on architecture and design, not on the technical implementation of Azure resources. 
    </p>
    <h2>Target Audience</h2>
    <p>
        This course is intended for IT professionals who need to design an infrastructure architecture in Azure. Participants should have experience in Azure 
        and understand the services and solutions offered by the platform.
    </p>
    <h2>Course Outline</h2>
    <h4>Azure Infrastructure Architecture Introduction</h4>
    <p>
        Setting up your infrastructure in Azure can be very complex. The platform offers hundreds of services and you need to decide which ones are useful and how to implement them
        in the best possible way for your organization. A number of factors will drive your decision: cost, manageability, performance, security, scalability.
    </p>
    <ul>
        <li>Global Azure Infrastructure</li>
        <li>Architectural Building Blocks: Storage, Networking, Compute</li>
        <li>Design Influencers: Security, Cost, Performance, High Availability, ...</li>
        <li>LAB: Azure Infrastructure Architecture Introduction</li>
    </ul>
    <h4>
        Designing Subscriptions</h4>
		<p>
		As a company you will probably end up with multiple subscriptions and lots of resources.
		Structuring these Azure resources will be key to stay on top of it all.</p>
    <ul>
        <li>Tenants</li>
		<li>Management Groups</li>
        <li>Subscriptions</li>
		<li>Resource Groups</li>
		<li>Azure Regions</li>
        <li>Naming and Tagging</li>
		<li>LAB: Designing Subscriptions</li>
	</ul>
    <h4>
        Resource Deployment
    </h4>
    <p> Azure resources can be deployed with lots of different methods: the Azure portal, scripts (PowerShell, Azure CLI), declarative methods (ARM templates, Terraform, Bicep).
        Choosing the right method for your organization can reduce the cost of managing and creating your infrastructure components.
    </p>
    <ul>
        <li>Scripting versus Declarative Approach</li>
        <li>Declarative Languages: ARM Templates, Terraform, Bicep</li>
        <li>Azure Template Specs and Deployment Stacks</li>
        <li>Azure DevOps versus GitHub</li>
        <li>Automation Design Considerations</li>
        <li>LAB: Resource Deployment</li>
    </ul>
    <h4>
        Network Design
    </h4>
    <p> Designing a network in the cloud is very similar to implementing your on-prem network. The same choices need to be made, the same services need to be provisioned.
    </p>
    <ul>
        <li>IP Address Ranges</li>
        <li>Hub and Spoke Topology</li>
        <li>Azure Virtual WAN</li>
        <li>Network Routing: UDR versus BGP</li>
        <li>Hybrid Networking: VPN Gateways versus ExpressRoute</li>
        <li>Network Topology Design Options</li>
        <li>LAB: Network Design</li>
    </ul>
    <h4>
        Name Resolution
    </h4>
    <p> To allow for easy communication between various application components both in the cloud and on-premises, you need to design a name resolution strategy.
    </p>
    <ul>
        <li>Azure-Provided Name Resolution</li>
        <li>Azure Private DNS Zone</li>
        <li>Hybrid Name Resolution: Azure DNS Private Resolver</li>
        <li>Name Resolution with Azure Virtual WAN</li>
        <li>LAB: Name Resolution</li>
    </ul>
    <h4>VNet Integration Options for PaaS Solutions</h4>
    <p>
        By design, PaaS solutions have a public endpoint which makes them accessible over the Internet. This is not always the best implementation from security point of view.
        Most PaaS services can be integrated with a VNet to limit public access.
    </p>
    <ul>
        <li>Service Endpoints</li>
        <li>Private Endpoints</li>
		<li>VNet Integration</li>
		<li>App Service Environment</li>
        <li>Hybrid Connections</li>
		<li>LAB: VNet Integration Options for PaaS Solutions</li>
    </ul>
    <h4>
        Choosing a Compute Solution
    </h4>
    <p> Hosting applications in the cloud can be done using various different compute options. Choosing the right solution in terms of cost, availability, ease of management is 
        essential to provide a stable environment for your users.
    </p>
    <ul>
        <li>Virtual Machines</li>
        <li>Containers: Container Instances, Container Apps, AKS</li>
        <li>App Services: Web Apps, Azure Functions</li>
        <li>Compare Solutions: Cost, Security, Availability, Scalability</li>
        <li>Choosing a Load Balancing Solution</li>
        <li>LAB: Choosing a Compute Solution</li>
    </ul>
    <h4>Security Architecture</h4>
    <p>
        To control access to the services in the Azure cloud, you need to carefully design an authorization strategy. Decide which resources users and services can access
        by implementing an RBAC mechanism. Consider where you are going to store your sensitive data and protect it accordingly.
    </p>
    <ul>
        <li>Role Based Access Control (RBAC)</li>
        <li>Options for Storing Sensitive Data</li>
        <li>Key Vault</li>
        <li>Managed Identities</li>
        <li>Inbound/Outbound Internet Connectivity</li>
        <li>Security Best Practices</li>
		<li>LAB: Security Architecture</li>
    </ul>
    <h4>Design for Identities</h4>
    <p>
        Microsoft Entra ID is the center of everything that is related to authentication and authorization in the cloud. Entra ID supports various 
        authentication mechanisms and protection services that can help you secure your identities better and protect against possible identity theft.
    </p>
    <ul>
        <li>Microsoft Entra ID</li>
        <li>Hybrid Options: Entra Connect versus Entra Cloud Sync</li>
        <li>Hybrid Sign In Options: Password Hash Sync, Pass-Through Authentication, Federation</li>
        <li>Authentication Options: MFA, Password-less Authentication</li>
        <li>Entra ID as Central Identity Service for all Applications</li>
        <li>Protection Features: Design Conditional Access Policies</li>
		<li>LAB: Design for Identities</li>
    </ul>
</body>
</html>
