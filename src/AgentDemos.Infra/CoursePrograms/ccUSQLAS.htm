<!DOCTYPE html>
<!-- saved from url=(0036)https://www.u2u.be/html/ccusqlas.htm -->
<html xmlns:mso="urn:schemas-microsoft-com:office:office" xmlns:msdt="uuid:C2F41010-65B3-11d1-A29F-00AA00C14882">
    <head><meta http-equiv="Content-Type" content="text/html; charset=windows-1252">
    <title>SQL Server Analysis Services</title>
    <meta name="NumberOfDays" content="3">
    <!--[if gte mso 9]><xml>
    <mso:CustomDocumentProperties>
    <mso:ContentTypeId msdt:dt="string">0x0101009C33340F38E14D1EABEAC83093A8F1720055DA0A7A22799E40BA7BABDCB21352CF</mso:ContentTypeId>
    </mso:CustomDocumentProperties>
    </xml><![endif]-->
</head>
<body>
    <h2>Learning Goals</h2>
    <p>
        When analyzing business data, two challenges pop up frequently: the
        <strong>complexity</strong> of writing and maintaining queries which retrieve the proper data,
        and the <strong>performance</strong> issues which might surface when querying large amounts of
        data. OLAP (OnLine Analytical Processing) cubes provide
        fast aggregation querying over large amounts of data in a user-friendly
        way. In this course, you learn how to build, maintain and query OLAP cubes with
        Microsoft SQL Server Analysis Services Multi-Dimensional 2022 (or earlier).
    </p>

    <p>
        After completing the course, students will be able to create and manage Analysis Services cubes. They will also be able to process cubes and design aggregations.
    </p>

    <h2>Target audience</h2>
    <p>
        This course is intended for developers and administrators who want to learn the skills to develop
        Analysis Services cubes on SQL Server 2019 or earlier. It can also be attended by administrators who want to acquire a deeper
        knowledge of the server they are managing.
    </p>
    <h2>
        Course Outline
    </h2>
    <h4>
        Introduction
    </h4>
    <p> 
        Before building Analysis Services cubes we must first learn why and when cubes are a better 
        alternative than data warehouses. This introduction also discusses the difference between the
        tabular and the multi-dimensional version of Microsoft Analysis Services.
    </p>
    <ul>
        <li>The need for OLAP and Analysis Services </li>
        <li>Business Intelligence in SQL Server</li>
        <li>Tabular versus multi-dimensional</li>
    </ul>
    <h4>
        Loading the relational data
    </h4>
    <p>
        An Analysis Services cube pulls its data from relational data sources. This modules shows how we
        can connect to those sources, how we can specify which tables should be accessible, and how we can
        make modifications to the source tables via data source views. Al this is done via Visual Studio, which is introduced in this module as well.
    </p>
    <ul>
        <li>Creating Analysis Services projects in Visual Studio</li>
        <li>Data Sources and Impersonation </li>
        <li>Data Source Views </li>
        <li>Exploring the data </li>
        <li>LAB: Getting started with SSAS in Visual Studio</li>
    </ul>
    <h4>
        Building and deploying dimensions
    </h4>
    <p>
        Dimensions are the most important building blocks for creating cubes. Dimensions consist of all sorts of objects
        such as attributes and hierarchies. This module first introduces that terminology, then creates basic dimensions 
        via the wizard and then goes and refines these via the editor.
    </p>
    <ul>
        <li>Dimension terminology</li>
        <li>Building dimensions with the wizard</li>
        <li>Fine-tuning dimensions in the editor</li>
        <li>Handling attribute-relationships</li>
        <li>LAB: developing SSAS dimensions</li>
    </ul>
    <h4>
        Building and deploying cubes
    </h4>
    <p>
        Cubes are the only objects that are directly queried by the users. This makes them the most important
        object in the Analysis Services product. In this module we first learn about cube specific terminology, such as 
        measures and measure groups, then we build a basic cube via the wizard and we see some fine-tuning of these 
        cubes with the editor. All the more advanced cube features are discussed in the following modules.
    </p>
    <ul>
        <li>Cube terminology</li>
        <li>Using the cube wizard</li>
        <li>Additive, semi-additive and none-additive measures</li>
        <li>Building and fine-tuning cubes in the cube editor</li>
        <li>Deploying cubes and dimensions</li>
        <li>LAB: Building and deploying SSAS cubes</li>
    </ul>
    <h4>
        Browsing the data
    </h4>
    <p>Before we start enriching our cube with more advanced features we learn in this module how cubes can
        be accessed from typical business intelligence tools such as Excel, Power BI and Reporting Services.
    </p>
    <ul>
        <li>Browsing from within Visual Studio and Management Studio </li>
        <li>Browsing from Excel </li>
        <li>Using cubes in Power BI</li>
        <li>Browsing with Reporting Services</li>
        <li>Access cubes from a custom .Net application </li>
        <li>LAB: Querying cubes from within Excel</li>
    </ul>
    <h4>
        Processing Cubes and Dimensions
    </h4>
    <p>Cubes can be seen as a sort of cache on top of a data warehouse. But when the data warehouse changes the
        cache needs to be refreshed. This is what processing does. But when the cube needs to be processed frequently
        or the data volumes grow large we cannot simply reload all the data each time. That's where this module kicks in:
        it shows the different options available for refreshing a subset of the data in the most optimal way.
    </p>
    <ul>
        <li>Different types of processing </li>
        <li>Processing dimensions </li>
        <li>Processing cubes </li>
        <li>LAB: Full and incremental processing</li>
    </ul>
    <h4>
        Aggregation design
    </h4>
    <p>Aggregations are to a cube roughly what indexes are to a relational databases:
        They can speed up the querying... if the right aggregations are made. But without 
        aggregations or with the wrong aggregations even simple queries can become horribly slow.
        But before this module dives into the details of how to setup aggregations it first covers two related topics:
        How is Analysis Services storing its data (ROLAP, HOLAP and MOLAP) and how can we store the factual data in 
        smaller units (partitioning)?
    </p>
    <ul>
        <li>MOLAP, ROLAP and HOLAP storage modes</li>
        <li>Partitioning the cube</li>
        <li>Creating aggregations </li>
        <li>Usage based aggregation design </li>
        <li>Pro-active caching </li>
        <li>LAB: Aggregation design</li>
    </ul>
    
    <h4>
        Administration
    </h4>
    <p>
        As any server, also SSAS needs backups, security configuration, performance monitoring etc. 
    </p>
    <ul>
        <li>Installing Analysis Services </li>
        <li>Backup and Restore </li>
        <li>Securing Analysis Services</li>
        <li>Monitoring</li>
        <li>LAB: SSAS Administration</li>
    </ul>


</body></html>